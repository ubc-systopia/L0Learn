name: Build

on:
  workflow_dispatch:

  push:
    # Pattern matched against refs/tags
    tags:
      - '**'

jobs:
  build_wheels_not_windows:
    name: Build wheels on ${{ matrix.os }} for Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]

    steps:
      - name: Checkout l0learn
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y liblapack-dev libopenblas-dev cmake build-essential
          cd python
          bash scripts/install_linux_libs.sh

      - name: Build wheels
        run: |
          cd python
          python -m cibuildwheel --output-dir fastsparsegams-wheelhouse
        env:
          CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-*
          CIBW_SKIP: pp* *-win32 *-manylinux_i686 *musllinux*
          CIBW_BEFORE_ALL_LINUX: "yum install -y lapack-devel openblas-devel cmake gcc gcc-c++ make || (apt-get update && apt-get install -y liblapack-dev libopenblas-dev cmake build-essential)"
          CIBW_BEFORE_BUILD_LINUX: "bash {project}/scripts/install_linux_libs.sh"
          CIBW_BEFORE_BUILD_MACOS: "cd {project} && bash scripts/install_linux_libs.sh"
          CIBW_REPAIR_WHEEL_COMMAND_MACOS: "python scripts/fix_macos_wheel.py {wheel} {dest_dir}"
          CIBW_ENVIRONMENT: "LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH CFLAGS='-I/usr/local/include' CXXFLAGS='-I/usr/local/include' LDFLAGS='-L/usr/local/lib'"
          CIBW_BUILD_VERBOSITY: 3

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: fastsparsegams-wheelhouse
          path: python/fastsparsegams-wheelhouse/

  build_wheels_windows:
    name: Build wheels on ${{ matrix.os }} for Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019]

    steps:
      - name: Checkout l0learn
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: |
          cd python
          python -m cibuildwheel --output-dir fastsparsegams-wheelhouse
        env:
          CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-*
          CIBW_SKIP: pp* *-win32 *-manylinux_i686 *musllinux*
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: fastsparsegams-wheelhouse
          path: python/fastsparsegams-wheelhouse/

#name: Build
#
#on:
#  workflow_dispatch:
#
#  push:
#    # Pattern matched against refs/tags
#    tags:
#      - '**'
#
#jobs:
#  build_wheels:
#    name: Build wheels on ${{ matrix.os }}
#    runs-on: ${{ matrix.os }}
#    strategy:
#      fail-fast: false
#      matrix:
#        os: [ubuntu-latest, macOS-10.15] # windows-2019, ]
#
#
#    steps:
#      - name: Checkout l0learn
#        uses: actions/checkout@v2
#        with:
#          submodules: true
#
#      - name: Setup Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.7
#
#      - name: Install cibuildwheel
#        run: python -m pip install cibuildwheel
#
#      - name: Build wheels
#        run: |
#          cd python
#          python -m cibuildwheel --output-dir l0learn-wheelhouse
#        env:
#          CIBW_SKIP: pp* *-win32 *-manylinux_i686 *musllinux*
#          CIBW_BEFORE_ALL_LINUX: "yum install -y lapack-devel || apt-get install -y liblapack-dev && bash scripts/install_linux_libs.sh"
##          CIBW_BEFORE_TEST: "pip install pytest numpy hypothesis"
##          CIBW_TEST_COMMAND: "pytest {package}/tests"
#          CIBW_ARCHS_MACOS: "x86_64 arm64"
#          CIBW_BUILD_VERBOSITY: 3

#      - uses: actions/upload-artifact@v2
#        with:
#          name: l0learn-wheelhouse
#          path: python/l0learn-wheelhouse/
#
#  upload-to-pypip:
#    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
#    name: Publish a Python distribution to PyPI
#    runs-on: ubuntu-latest
#    needs: build_wheels
#
#    steps:
#      - name: Checkout l0learn
#        uses: actions/checkout@v2
#
#      - name: Setup Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: 3.7
#
#      - name: Download l0learn-wheelhouse artifact
#        uses: actions/download-artifact@v3
#        with:
#          name: l0learn-wheelhouse
#          path: python/l0learn-wheelhouse/
#
#      - name: upload-artifact
#        uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          user: __token__
#          password: ${{ secrets.PYPI_API_TOKEN }}
#          packages_dir: python/l0learn-wheelhouse/
